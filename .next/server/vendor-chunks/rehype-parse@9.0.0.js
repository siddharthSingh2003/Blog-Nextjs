"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/rehype-parse@9.0.0";
exports.ids = ["vendor-chunks/rehype-parse@9.0.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/rehype-parse@9.0.0/node_modules/rehype-parse/lib/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/rehype-parse@9.0.0/node_modules/rehype-parse/lib/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rehypeParse)\n/* harmony export */ });\n/* harmony import */ var hast_util_from_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hast-util-from-html */ \"(rsc)/./node_modules/.pnpm/hast-util-from-html@2.0.1/node_modules/hast-util-from-html/lib/index.js\");\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-from-html').Options} FromHtmlOptions\n * @typedef {import('unified').Parser<Root>} Parser\n */\n\n/**\n * @typedef {Omit<FromHtmlOptions, 'onerror'> & RehypeParseFields} Options\n *   Configuration.\n *\n * @typedef RehypeParseFields\n *   Extra fields.\n * @property {boolean | null | undefined} [emitParseErrors=false]\n *   Whether to emit parse errors while parsing (default: `false`).\n *\n *   > ðŸ‘‰ **Note**: parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or us) are specced yet.\n *   > Some documentation may still be missing.\n */\n\n\n\n/**\n * Plugin to add support for parsing from HTML.\n *\n * > ðŸ‘‰ **Note**: this is not an XML parser.\n * > It supports SVG as embedded in HTML.\n * > It does not support the features available in XML.\n * > Passing SVG files might break but fragments of modern SVG should be fine.\n * > Use [`xast-util-from-xml`][xast-util-from-xml] to parse XML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nfunction rehypeParse(options) {\n  /** @type {import('unified').Processor<Root>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const {emitParseErrors, ...settings} = {...self.data('settings'), ...options}\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc, file) {\n    return (0,hast_util_from_html__WEBPACK_IMPORTED_MODULE_0__.fromHtml)(doc, {\n      ...settings,\n      onerror: emitParseErrors\n        ? function (message) {\n            if (file.path) {\n              message.name = file.path + ':' + message.name\n              message.file = file.path\n            }\n\n            file.messages.push(message)\n          }\n        : undefined\n    })\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVoeXBlLXBhcnNlQDkuMC4wL25vZGVfbW9kdWxlcy9yZWh5cGUtcGFyc2UvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQSxhQUFhLHFCQUFxQjtBQUNsQyxhQUFhLHVDQUF1QztBQUNwRCxhQUFhLGdDQUFnQztBQUM3Qzs7QUFFQTtBQUNBLGFBQWEsc0RBQXNEO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyw0QkFBNEI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0Qzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0QkFBNEI7QUFDdkM7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNlO0FBQ2YsYUFBYSxtQ0FBbUM7QUFDaEQ7QUFDQTtBQUNBLFNBQVMsOEJBQThCLEdBQUc7O0FBRTFDOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxXQUFXLDZEQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXdlc29tZS1wd2gtYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWh5cGUtcGFyc2VAOS4wLjAvbm9kZV9tb2R1bGVzL3JlaHlwZS1wYXJzZS9saWIvaW5kZXguanM/ZjUzNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5Sb290fSBSb290XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0LXV0aWwtZnJvbS1odG1sJykuT3B0aW9uc30gRnJvbUh0bWxPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCd1bmlmaWVkJykuUGFyc2VyPFJvb3Q+fSBQYXJzZXJcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPbWl0PEZyb21IdG1sT3B0aW9ucywgJ29uZXJyb3InPiAmIFJlaHlwZVBhcnNlRmllbGRzfSBPcHRpb25zXG4gKiAgIENvbmZpZ3VyYXRpb24uXG4gKlxuICogQHR5cGVkZWYgUmVoeXBlUGFyc2VGaWVsZHNcbiAqICAgRXh0cmEgZmllbGRzLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2VtaXRQYXJzZUVycm9ycz1mYWxzZV1cbiAqICAgV2hldGhlciB0byBlbWl0IHBhcnNlIGVycm9ycyB3aGlsZSBwYXJzaW5nIChkZWZhdWx0OiBgZmFsc2VgKS5cbiAqXG4gKiAgID4g8J+RiSAqKk5vdGUqKjogcGFyc2UgZXJyb3JzIGFyZSBjdXJyZW50bHkgYmVpbmcgYWRkZWQgdG8gSFRNTC5cbiAqICAgPiBOb3QgYWxsIGVycm9ycyBlbWl0dGVkIGJ5IHBhcnNlNSAob3IgdXMpIGFyZSBzcGVjY2VkIHlldC5cbiAqICAgPiBTb21lIGRvY3VtZW50YXRpb24gbWF5IHN0aWxsIGJlIG1pc3NpbmcuXG4gKi9cblxuaW1wb3J0IHtmcm9tSHRtbH0gZnJvbSAnaGFzdC11dGlsLWZyb20taHRtbCdcblxuLyoqXG4gKiBQbHVnaW4gdG8gYWRkIHN1cHBvcnQgZm9yIHBhcnNpbmcgZnJvbSBIVE1MLlxuICpcbiAqID4g8J+RiSAqKk5vdGUqKjogdGhpcyBpcyBub3QgYW4gWE1MIHBhcnNlci5cbiAqID4gSXQgc3VwcG9ydHMgU1ZHIGFzIGVtYmVkZGVkIGluIEhUTUwuXG4gKiA+IEl0IGRvZXMgbm90IHN1cHBvcnQgdGhlIGZlYXR1cmVzIGF2YWlsYWJsZSBpbiBYTUwuXG4gKiA+IFBhc3NpbmcgU1ZHIGZpbGVzIG1pZ2h0IGJyZWFrIGJ1dCBmcmFnbWVudHMgb2YgbW9kZXJuIFNWRyBzaG91bGQgYmUgZmluZS5cbiAqID4gVXNlIFtgeGFzdC11dGlsLWZyb20teG1sYF1beGFzdC11dGlsLWZyb20teG1sXSB0byBwYXJzZSBYTUwuXG4gKlxuICogQHBhcmFtIHtPcHRpb25zIHwgbnVsbCB8IHVuZGVmaW5lZH0gW29wdGlvbnNdXG4gKiAgIENvbmZpZ3VyYXRpb24gKG9wdGlvbmFsKS5cbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKiAgIE5vdGhpbmcuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlaHlwZVBhcnNlKG9wdGlvbnMpIHtcbiAgLyoqIEB0eXBlIHtpbXBvcnQoJ3VuaWZpZWQnKS5Qcm9jZXNzb3I8Um9vdD59ICovXG4gIC8vIEB0cy1leHBlY3QtZXJyb3I6IFRTIGluIEpTRG9jIGdlbmVyYXRlcyB3cm9uZyB0eXBlcyBpZiBgdGhpc2AgaXMgdHlwZWQgcmVndWxhcmx5LlxuICBjb25zdCBzZWxmID0gdGhpc1xuICBjb25zdCB7ZW1pdFBhcnNlRXJyb3JzLCAuLi5zZXR0aW5nc30gPSB7Li4uc2VsZi5kYXRhKCdzZXR0aW5ncycpLCAuLi5vcHRpb25zfVxuXG4gIHNlbGYucGFyc2VyID0gcGFyc2VyXG5cbiAgLyoqXG4gICAqIEB0eXBlIHtQYXJzZXJ9XG4gICAqL1xuICBmdW5jdGlvbiBwYXJzZXIoZG9jLCBmaWxlKSB7XG4gICAgcmV0dXJuIGZyb21IdG1sKGRvYywge1xuICAgICAgLi4uc2V0dGluZ3MsXG4gICAgICBvbmVycm9yOiBlbWl0UGFyc2VFcnJvcnNcbiAgICAgICAgPyBmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgICAgICAgICAgaWYgKGZpbGUucGF0aCkge1xuICAgICAgICAgICAgICBtZXNzYWdlLm5hbWUgPSBmaWxlLnBhdGggKyAnOicgKyBtZXNzYWdlLm5hbWVcbiAgICAgICAgICAgICAgbWVzc2FnZS5maWxlID0gZmlsZS5wYXRoXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZpbGUubWVzc2FnZXMucHVzaChtZXNzYWdlKVxuICAgICAgICAgIH1cbiAgICAgICAgOiB1bmRlZmluZWRcbiAgICB9KVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/rehype-parse@9.0.0/node_modules/rehype-parse/lib/index.js\n");

/***/ })

};
;